{"version":3,"sources":["components/Clock.jsx","components/Header.jsx","components/Button.jsx","components/Back.jsx","pages/ReadPage.jsx","pages/ErrorPage.jsx","components/TableActionBtns.jsx","components/EditRow.jsx","components/TableBodyRows.jsx","components/SearchField.jsx","components/AddRow.jsx","components/Warning.jsx","components/Table.jsx","components/Main.jsx","pages/HomePage.jsx","App.jsx","index.jsx"],"names":["Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","Component","Header","className","Button","children","otherProps","type","Back","to","ReadPage","userData","filter","user","id","Number","match","params","name","username","email","style","listStyle","ErrorPage","TableActionBtns","delUser","editUser","onClick","e","EditRow","handleChangeInput","bind","handleUpdateBtn","handleCancelBtn","target","value","updateUser","onChange","placeholder","rows","React","TableBodyRows","editing","currentId","addUser","SearchField","searchChange","defaultProps","AddRow","handleChange","handleClick","preventDefault","Warning","alerts","isSuccess","alertMsg","isError","isEmpty","isLoading","Table","users","hasAlert","length","map","key","uuid","v4","colSpan","fakeApiUrl","Main","searchfield","status","isEditing","onSearchChange","onDelUser","onAddUser","onEditUser","onUpdateUser","prevState","axios","get","then","data","catch","error","message","setTimeout","console","log","delete","err","response","msg","request","a","put","newUser","asyncFetch","post","asyncFunc","filteredUsers","toLowerCase","includes","trim","height","HomePage","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aa8faac.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>{this.state.date.toLocaleTimeString()}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport Clock from './Clock';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">CRUD using React</h1>\r\n\r\n        <p className=\"lead\">\r\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Explicabo,\r\n          veniam?\r\n        </p>\r\n        <Clock />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Button(props) {\r\n  const { children, ...otherProps } = props;\r\n  return (\r\n    // eslint-disable-next-line react/jsx-props-no-spreading\r\n    <button type=\"button\" {...otherProps}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\nexport default function Back() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Link to=\"/\">\r\n        <Button type=\"button\" className=\"btn btn-outline-danger\">\r\n          Back Home\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport userData from '../users.json';\r\n\r\nexport default function ReadPage(props) {\r\n  const [{ id, name, username, email }] = userData.filter(\r\n    user => user.id === Number(props.match.params.id)\r\n  );\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <div className=\"card\">\r\n        <h1>\r\n          Hi,\r\n          {username}\r\n          {id}\r\n        </h1>\r\n        <ul style={{ listStyle: 'none' }}>\r\n          <li>\r\n            Name:\r\n            {` ${name}`}\r\n          </li>\r\n          <li>\r\n            Email:\r\n            {` ${email}`}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ErrorPage() {\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <div className=\"card\">\r\n        <h1>Error Page</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\nfunction TableActionBtns({ delUser, editUser, id }) {\r\n  return (\r\n    <td>\r\n      <div className=\"btn-group\">\r\n        <Link to={`/read/${id}`}>\r\n          <Button className=\"btn btn-sm btn-info\">Read</Button>\r\n        </Link>\r\n\r\n        <button\r\n          onClick={e => editUser(e, id)}\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-primary\"\r\n        >\r\n          Edit\r\n        </button>\r\n\r\n        <button\r\n          onClick={e => delUser(e, id)}\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </td>\r\n  );\r\n}\r\n\r\nexport default TableActionBtns;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default class EditRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.name,\r\n      username: props.username,\r\n      email: props.email\r\n    };\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.handleUpdateBtn = this.handleUpdateBtn.bind(this);\r\n    this.handleCancelBtn = this.handleCancelBtn.bind(this);\r\n  }\r\n\r\n  handleChangeInput(e) {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleUpdateBtn(e) {\r\n    const { id } = this.props;\r\n    const { name, username, email } = this.state;\r\n\r\n    this.props.updateUser(e, { id, name, username, email });\r\n  }\r\n\r\n  handleCancelBtn(e) {\r\n    const nullId = null;\r\n    this.props.editUser(e, nullId);\r\n  }\r\n\r\n  render() {\r\n    const { name, username, email } = this.state;\r\n    return (\r\n      <tr>\r\n        <td>{this.props.id}</td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChangeInput}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            className=\"form-control\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <textarea\r\n            onChange={this.handleChangeInput}\r\n            value={username}\r\n            name=\"username\"\r\n            placeholder=\"Enter username\"\r\n            className=\"form-control\"\r\n            rows=\"1\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChangeInput}\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"form-control\"\r\n          />\r\n        </td>\r\n        <td className=\"btn-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleUpdateBtn}\r\n            className=\"btn btn-primary \"\r\n          >\r\n            Update\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleCancelBtn}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// EditRow.propTypes = {\r\n//   price: PropTypes.number.isRequired\r\n// };\r\n","import React from 'react';\r\n// import Proptypes from 'prop-types';\r\nimport TableActionBtns from './TableActionBtns';\r\nimport EditRow from './EditRow';\r\n\r\nfunction TableBodyRows({\r\n  editing,\r\n  currentId,\r\n  id,\r\n  name,\r\n  username,\r\n  email,\r\n  delUser,\r\n  editUser,\r\n  addUser,\r\n  updateUser\r\n}) {\r\n  if (editing && id === currentId) {\r\n    return (\r\n      <EditRow\r\n        addUser={addUser}\r\n        editUser={editUser}\r\n        updateUser={updateUser}\r\n        currentId={currentId}\r\n        id={id}\r\n        name={name}\r\n        username={username}\r\n        email={email}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <tr>\r\n      <td>{id}</td>\r\n      <td>{name}</td>\r\n      <td>{username || '-'}</td>\r\n      <td>{email || '-'}</td>\r\n      <TableActionBtns id={id} editUser={editUser} delUser={delUser} />\r\n    </tr>\r\n  );\r\n}\r\n\r\n// TableBodyRows.propTypes = {};\r\n\r\nexport default TableBodyRows;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport default function SearchField({ searchChange, placeholder }) {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      className=\"form-control w-75\"\r\n      placeholder={placeholder}\r\n      onChange={searchChange}\r\n    />\r\n  );\r\n}\r\n\r\nSearchField.propTypes = {\r\n  searchChange: Proptypes.func.isRequired,\r\n  placeholder: Proptypes.string\r\n};\r\n\r\nSearchField.defaultProps = {\r\n  placeholder: 'Search...'\r\n};\r\n","import React from 'react';\r\n// import InputField from './InputField';\r\n\r\nexport default class AddRow extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      username: '',\r\n      email: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    const { addUser } = this.props;\r\n    const { name, username, email } = this.state;\r\n\r\n    addUser(e, { name, username, email });\r\n\r\n    // reset this.state, after clicked\r\n    this.setState({\r\n      name: '',\r\n      username: '',\r\n      email: ''\r\n    });\r\n  }\r\n\r\n  // handleSubmit(e) {\r\n  //   e.preventDefault();\r\n  //   const { nextId, addUser } = this.props;\r\n  //   const { name, username, email } = this.state;\r\n\r\n  //   addUser(e, { name, username, email, nextId });\r\n  //   console.log(e);\r\n  //   // reset this.state, after clicked\r\n  //   this.setState({\r\n  //     name: '',\r\n  //     username: '',\r\n  //     email: ''\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    const { name, username, email } = this.state;\r\n\r\n    return (\r\n      <tr>\r\n        <td> </td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            className=\"form-control\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <textarea\r\n            onChange={this.handleChange}\r\n            value={username}\r\n            name=\"username\"\r\n            placeholder=\"Enter username\"\r\n            className=\"form-control\"\r\n            rows=\"1\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChange}\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"enter email\"\r\n            className=\"form-control\"\r\n          />\r\n          {/* <InputField\r\n            onChange={this.handleChange}\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"enter email\"\r\n          /> */}\r\n        </td>\r\n        <td>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleClick}\r\n            className=\"btn btn-success btn-block\"\r\n          >\r\n            Add User\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Warning({ alerts }) {\r\n  if (alerts.isSuccess) {\r\n    return (\r\n      <h4 className=\"alert alert-success text-center mb-0\">\r\n        {alerts.isSuccess && alerts.alertMsg}\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  if (alerts.isError) {\r\n    return (\r\n      <h4 className=\"alert alert-danger text-center mb-0\">\r\n        {alerts.isError && alerts.alertMsg}\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h4 className=\"alert alert-warning text-center mb-0\">\r\n      {alerts.isEmpty && alerts.alertMsg}\r\n      {alerts.isLoading && alerts.alertMsg}\r\n    </h4>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport uuid from 'uuid';\r\nimport TableBodyRows from './TableBodyRows';\r\nimport SearchField from './SearchField';\r\nimport AddRow from './AddRow';\r\nimport Warning from './Warning';\r\n\r\nfunction Table({\r\n  users,\r\n  alerts,\r\n  searchChange,\r\n  updateUser,\r\n  delUser,\r\n  addUser,\r\n  editUser,\r\n  editing,\r\n  currentId\r\n}) {\r\n  // nextId is the id at 'addUser row',\r\n  // which will be the id for 'newUser'\r\n  // if there is no data item, set the 'nextId' to 1\r\n  // const nextId = users.length ? +users[users.length - 1].id + 1 : 1;\r\n  const hasAlert =\r\n    alerts.isLoading || alerts.isEmpty || alerts.isError || alerts.isSuccess;\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card mx-auto w-75\">\r\n        <div className=\"card-header text-white bg-info clearfix\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h3>Users Table</h3>\r\n            </div>\r\n            <div className=\"col\">\r\n              <SearchField searchChange={searchChange} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {hasAlert && <Warning alerts={alerts} />}\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Username</th>\r\n                  <th>Email</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.length > 0 ? (\r\n                  users.map(user => {\r\n                    return (\r\n                      <TableBodyRows\r\n                        key={uuid.v4()}\r\n                        id={user.id}\r\n                        name={user.name}\r\n                        username={user.username}\r\n                        email={user.email}\r\n                        updateUser={updateUser}\r\n                        delUser={delUser}\r\n                        editUser={editUser}\r\n                        addUser={addUser}\r\n                        editing={editing}\r\n                        currentId={currentId}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <tr>\r\n                    <td> </td>\r\n                    <td> </td>\r\n                    <td colSpan={5}>Sorry, No User Available</td>\r\n                  </tr>\r\n                )}\r\n\r\n                <AddRow addUser={addUser} />\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n// import uuid from 'uuid';\r\n\r\nimport Table from './Table';\r\n// import userData from '../users.json';\r\n// import Loading from './Loading';\r\n\r\n// jsonplaceholder\r\nconst fakeApiUrl = 'https://jsonplaceholder.typicode.com';\r\n\r\n// main\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      searchfield: '',\r\n      // alerts, status\r\n      status: { isEditing: false, currentId: null },\r\n      alerts: {\r\n        isLoading: false,\r\n        isEmpty: false,\r\n        isError: false,\r\n        isSuccess: false,\r\n        alertMsg: ''\r\n      }\r\n    };\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onDelUser = this.onDelUser.bind(this);\r\n    this.onAddUser = this.onAddUser.bind(this);\r\n    this.onEditUser = this.onEditUser.bind(this);\r\n    this.onUpdateUser = this.onUpdateUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(prevState => {\r\n      return {\r\n        alerts: { ...prevState.alerts, isLoading: true, alertMsg: 'Loading...' }\r\n      };\r\n    });\r\n\r\n    // get all?\r\n    axios\r\n      .get(`${fakeApiUrl}/users`)\r\n      .then(users =>\r\n        this.setState(prevState => {\r\n          return {\r\n            users: users.data,\r\n            alerts: {\r\n              ...prevState.alerts,\r\n              isLoading: false,\r\n              isSuccess: true,\r\n              alertMsg: 'Fetch Success'\r\n            }\r\n          };\r\n        })\r\n      )\r\n      .catch(error =>\r\n        this.setState(prevState => {\r\n          return {\r\n            alerts: {\r\n              ...prevState.alerts,\r\n              isError: true,\r\n              isLoading: false,\r\n              alertMsg: error.message\r\n            }\r\n          };\r\n        })\r\n      );\r\n\r\n    setTimeout(() => {\r\n      this.setState(prevState => {\r\n        return {\r\n          alerts: {\r\n            ...prevState.alerts,\r\n            isSuccess: false,\r\n            alertMsg: ''\r\n          }\r\n        };\r\n      });\r\n    }, 1500);\r\n  }\r\n\r\n  // componentDidUpdate(prevState) {\r\n  //   if (prevState.users !== this.state.users) {\r\n  //     // this.fetchData();\r\n  //     console.log('a');\r\n  //   }\r\n  // }\r\n\r\n  onSearchChange(e) {\r\n    this.setState({ searchfield: e.target.value });\r\n  }\r\n\r\n  onDelUser(e, id) {\r\n    const { status } = this.state;\r\n\r\n    // on editing mode, you cant click delete btn\r\n    if (status.isEditing) return;\r\n    console.log('deleted', id);\r\n\r\n    axios\r\n      .delete(`${fakeApiUrl}/users/${id}`)\r\n      .then(() => {\r\n        this.setState(prevState => {\r\n          return { users: prevState.users.filter(user => user.id !== id) };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        if (err.response) {\r\n          console.log('err.response.data', err.response.data.msg);\r\n          console.log('err.response.status:', err.response.status);\r\n          this.setState(prevState => {\r\n            return {\r\n              alerts: {\r\n                ...prevState.alerts,\r\n                isError: true,\r\n                alertMsg: `${err.response.data}`\r\n              }\r\n            };\r\n          });\r\n        } else if (err.request) {\r\n          console.log('err.request', err.request);\r\n        } else {\r\n          console.log(`Error msg: ${err.message}`);\r\n        }\r\n      });\r\n  }\r\n\r\n  //\r\n  onEditUser(e, id) {\r\n    // toggles the 'isEditing'\r\n    this.setState(prevState => {\r\n      return {\r\n        status: {\r\n          isEditing: !prevState.status.isEditing,\r\n          currentId: id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  // update user\r\n  onUpdateUser(e, { id, name, username, email }) {\r\n    // if blank inputs\r\n    if (!name || !email || !username) {\r\n      this.setState(prevState => {\r\n        return {\r\n          alerts: { ...prevState.alerts, isEmpty: true, alertMsg: 'Enter Text' }\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    const asyncFetch = async () => {\r\n      try {\r\n        await axios.put(`${fakeApiUrl}/users/${id}`, {\r\n          name,\r\n          username,\r\n          email\r\n        });\r\n\r\n        return this.setState(prevState => {\r\n          const updatedUsers = prevState.users.map(user => {\r\n            let newUser = null;\r\n            if (user.id === id) {\r\n              newUser = {\r\n                id,\r\n                name,\r\n                username,\r\n                email\r\n              };\r\n            }\r\n            return newUser || user;\r\n          });\r\n\r\n          return {\r\n            users: updatedUsers,\r\n            alerts: {\r\n              ...prevState.alerts,\r\n              isEmpty: false,\r\n              isSuccess: true,\r\n              alertMsg: 'Edit Success'\r\n            }\r\n          };\r\n        });\r\n      } catch (error) {\r\n        return console.log(error.message);\r\n      }\r\n    };\r\n\r\n    asyncFetch();\r\n\r\n    // PUT method\r\n    // axios\r\n    //   .put(`http://localhost:5000/robots/${id}`, { name, username, email })\r\n    //   .then(userUpd => {\r\n    //     this.setState(prevState => {\r\n    //       const updatedUsers = prevState.users.map(user => {\r\n    //         let newUser = null;\r\n    //         if (user.id === id) {\r\n    //           newUser = {\r\n    //             id,\r\n    //             name,\r\n    //             username,\r\n    //             email\r\n    //           };\r\n    //         }\r\n\r\n    //         return newUser || user;\r\n    //       });\r\n\r\n    //       return {\r\n    //         users: updatedUsers,\r\n    //         alerts: {\r\n    //           ...prevState.alerts,\r\n    //           isEmpty: false,\r\n    //           isSuccess: true,\r\n    //           alertMsg: 'Edit Success'\r\n    //         }\r\n    //       };\r\n    //     });\r\n\r\n    //  reset the status to default\r\n    this.setState(prevState => ({\r\n      status: { ...prevState.status, isEditing: false, currentId: null }\r\n    }));\r\n\r\n    // timeout\r\n    setTimeout(() => {\r\n      this.setState(prevState => ({\r\n        alerts: {\r\n          ...prevState.alerts,\r\n          isSuccess: false,\r\n          alertMsg: ''\r\n        }\r\n      }));\r\n    }, 1500);\r\n  }\r\n\r\n  onAddUser(e, { name, username, email }) {\r\n    // if empty inputs\r\n    if (!name || !username || !email) {\r\n      this.setState(prevState => {\r\n        return {\r\n          alerts: {\r\n            ...prevState.alerts,\r\n            isEmpty: true,\r\n            isError: false,\r\n            alertMsg: 'Enter Text'\r\n          }\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    const asyncFunc = async () => {\r\n      try {\r\n        const newUser = await axios.post(`${fakeApiUrl}/users`, {\r\n          name,\r\n          username,\r\n          email\r\n        });\r\n        console.log(newUser.data);\r\n\r\n        return this.setState(prevState => {\r\n          return {\r\n            users: [...prevState.users, newUser.data],\r\n            alerts: {\r\n              ...prevState.alerts,\r\n              isEmpty: false,\r\n              isError: false\r\n            }\r\n          };\r\n        });\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n    };\r\n\r\n    asyncFunc();\r\n\r\n    // axios\r\n    //   .post('http://127.0.0.1:5000/robots', {\r\n    //     name,\r\n    //     username,\r\n    //     email\r\n    //   })\r\n    //   .then(newUser => {\r\n    //     this.setState(prevState => {\r\n    //       return {\r\n    //         users: [...prevState.users, newUser.data],\r\n    //         alerts: {\r\n    //           ...prevState.alerts,\r\n    //           isEmpty: false,\r\n    //           isError: false\r\n    //         }\r\n    //       };\r\n    //     });\r\n    //   })\r\n    //   .catch(err => {\r\n    //     if (err.response) {\r\n    //       console.log('err.response.data', err.response.data.error);\r\n    //       console.log('err.response.status:', err.response.status);\r\n    //       this.setState(prevState => {\r\n    //         return {\r\n    //           alerts: {\r\n    //             ...prevState.alerts,\r\n    //             isError: true,\r\n    //             alertMsg: `${err.response.data.error}defaultError`\r\n    //           }\r\n    //         };\r\n    //       });\r\n    //     } else if (err.request) {\r\n    //       console.log('err.request', err.request);\r\n    //     } else {\r\n    //       console.log(`Error msg: ${err.message}`);\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  // render\r\n  render() {\r\n    const {\r\n      users,\r\n      searchfield,\r\n      status: { isEditing, currentId },\r\n      alerts\r\n    } = this.state;\r\n\r\n    // filter based on searchQuery\r\n    const filteredUsers = users.filter(user => {\r\n      // search at name and username\r\n      return user.name.toLowerCase().includes(searchfield.toLowerCase().trim());\r\n    });\r\n\r\n    return (\r\n      <main>\r\n        <Table\r\n          users={filteredUsers}\r\n          alerts={alerts}\r\n          searchChange={this.onSearchChange}\r\n          delUser={this.onDelUser}\r\n          addUser={this.onAddUser}\r\n          editUser={this.onEditUser}\r\n          updateUser={this.onUpdateUser}\r\n          editing={isEditing}\r\n          currentId={currentId}\r\n        />\r\n        <div style={{ height: '300px' }} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from '../components/Main';\r\n\r\nexport default function HomePage() {\r\n  return <Main />;\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// import './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Back from './components/Back';\r\n\r\n// page\r\nimport ReadPage from './pages/ReadPage';\r\nimport ErrorPage from './pages/ErrorPage';\r\nimport HomePage from './pages/HomePage';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Route exact path=\"/read/:id\" component={Back} />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/read/:id\" component={ReadPage} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\n// import './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n// import Test from './Test';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}